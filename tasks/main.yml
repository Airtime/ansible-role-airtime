---
# tasks file for airtime

######################################################################
# Packages
######################################################################

- name: Install packages required for Airtime
  # Update cache if older than 1 day
  apt: name={{ item }} state=latest update_cache=yes cache_valid_time=86400
  with_items:
    - python-configobj  # Without, "liquidsoap --check" fails with "No module named configobj"
    - alsa-utils
    #- festival
  tags: packages

######################################################################
# Airtime
######################################################################

- name: Add Airtime repository
  apt_repository: repo="deb http://apt.sourcefabric.org/ trusty main"
                  validate_certs=no
  tags: airtime

- name: Install Airtime publisher keyring
  apt: name=sourcefabric-keyring force=yes
  register: keyring_install
  tags: airtime

- name: Update repositories
  apt: update_cache=yes
  when: keyring_install|changed
  tags: airtime

- name: Preconfigure Airtime installation through Debconf
  debconf: name=airtime question="{{ item.q }}" value="{{ item.v }}" vtype="{{ item.t }}"
  with_items:
    - { q: "airtime/admin-password",      t: "string",  v: "{{ airtime_pass_md5 }}" }
    - { q: "airtime/storage-directory",   t: "string",  v: "{{ airtime_path }}" }
    - { q: "airtime/apache-setup",        t: "select",  v: "dedicated v-host" }
    - { q: "airtime/apache-deldefault",   t: "select",  v: "remove default" }
    - { q: "airtime/apache-servername",   t: "string",  v: "{{ ansible_hostname }}" }
    - { q: "airtime/apache-serveradmin",  t: "string",  v: "{{ admin_email }}" }
    - { q: "airtime/icecast-setup",       t: "boolean", v: "false" }
    - { q: "airtime/icecast-adminpw",     t: "string",  v: "hackme" }
    - { q: "airtime/icecast-hostname",    t: "string",  v: "localhost" }
    - { q: "airtime/icecast-relaypw",     t: "string",  v: "hackme" }
    - { q: "airtime/icecast-sourcepw",    t: "string",  v: "hackme" }
  tags: airtime

- name: Install Airtime package (go get a coffee...)
  apt: name=airtime
  register: airtime_install
  tags: airtime

- name: Verify Airtime admin password is correct in the database
  command: sudo -u postgres psql --quiet --no-align --tuples-only -c "SELECT pass FROM cc_subjs WHERE login = 'admin'" airtime
  register: psql_pass
  changed_when: false
  tags: airtime

- name: Update Airtime admin password into the database
  command: sudo -u postgres psql --quiet --no-align --tuples-only -c "UPDATE cc_subjs SET pass = '{{ airtime_pass_md5 }}' WHERE login = 'admin'" airtime
  when: "'{{ airtime_pass_md5 }}' not in psql_pass.stdout"
  tags: airtime

# vim: ft=ansible
